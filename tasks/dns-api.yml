
- name: Install required packages
  apt:
    name: "{{ item }}"
    update_cache: yes
    state: present
  with_items:
    - python3-pip 
    - python3-dev
    - python3-setuptools
    - build-essential
    - libssl-dev
    - libffi-dev
    - git
    - curl

- name: Copy git ssh key
  template:
    src: dns-api/git.key
    dest: "{{dns_api_git_key}}"
    owner: root
    group: root
    mode: 0600

- name: "Create API direction: {{named_config_path}}/{{dns_api_name}}"
  file:
    state: directory
    path: "{{named_config_path}}/{{dns_api_name}}"
    recurse: yes
    owner: "{{dns_api_service_user}}"
    group: "{{dns_api_service_group}}"

- name: "Clone API project from Gitlab: {{dns_api_git_repo}}"
  git:
    repo: "{{dns_api_git_repo}}"
    key_file: "{{dns_api_git_key}}"
    version: "{{dns_api_git_branch}}"
    dest: "{{named_config_path}}/{{dns_api_name}}"
    force: yes
    accept_hostkey: yes

- name: Pip3 install python requirements.txt
  command: pip3 install -r requirements.txt
  args:
    chdir: "{{named_config_path}}/{{dns_api_name}}"

- name: Configure dns-api service
  template:
    src: dns-api/dns-api.service.j2
    dest: "/etc/systemd/system/{{dns_api_name}}.service"

- name: Force systemd to reread configs
  systemd:
    daemon_reload: yes

- name: Start and enable service
  systemd:
    name: "{{dns_api_name}}.service"
    state: restarted
    enabled: yes

- name: "Add allowed commands to sudoers file so user {{dns_api_service_user}} use sudo"
  lineinfile:
    path: /etc/sudoers
    regexp: '^{{dns_api_service_user}} ALL='
    line: "{{dns_api_service_user}} ALL=(ALL) NOPASSWD: /bin/systemctl start {{named_service_name}}, /bin/systemctl status {{named_service_name}}"
    validate: 'visudo -cf %s'

- name: "Set Cronjob to sync local records with Cloudflare: on reboot"
  cron:
    name: "Sync Cloudflare records with local DNS records (reboot)"
    state: present
    job: "curl -X POST http://localhost:{{dns_api_service_port}}{{dns_api_cloudflare_sync_endpoint}} -H 'accept: application/json'"
    special_time: "reboot"

- name: "Set Cronjob to sync local records with Cloudflare: every hour"
  cron:
    name: "Sync Cloudflare records with local DNS records (hourly)"
    state: present
    job: "curl -X POST http://localhost:{{dns_api_service_port}}{{dns_api_cloudflare_sync_endpoint}} -H 'accept: application/json'"
    minute: "0"
    hour: "*"
